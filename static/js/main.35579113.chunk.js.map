{"version":3,"sources":["components/Search.js","App.js","index.js"],"names":["Search","props","fetchSearchResults","query","jsonUrl","axios","get","then","res","resNotFoundMsg","data","length","setState","results","message","isLoading","handleOnInputChange","ev","target","value","renderSearchResult","state","Object","keys","map","result","className","href","title","limit","body","id","this","debounceTimeout","minLength","type","name","placeholder","onChange","Component","App","ReactDOM","render","document","getElementById"],"mappings":"kRA2GeA,G,wDAnGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAUVC,mBAAqB,SAACC,GAClB,IAAMC,EAAO,uDAAmDD,GAEhEE,IAAMC,IAAIF,GACLG,MAAK,SAAAC,GACF,IAAMC,EAAkBD,EAAIE,KAAKC,OAA8C,GAArC,mCAC1C,EAAKC,SAAS,CACVC,QAASL,EAAIE,KACbI,QAASL,EACTM,WAAW,QApBR,EA0BnBC,oBAAsB,SAACC,GACnB,IAAMd,EAAQc,EAAGC,OAAOC,MACxB,EAAKP,SAAS,CAAET,MAAOA,EAAOY,WAAW,EAAMD,QAAS,KAAM,WAC1D,EAAKZ,mBAAmBC,OA7Bb,EAkCnBiB,mBAAqB,WAAO,IAChBP,EAAY,EAAKQ,MAAjBR,QAER,GAAIS,OAAOC,KAAKV,GAASF,QAAUE,EAAQF,OACvC,OACI,8BACKE,EAAQW,KAAI,SAACC,GACV,OACI,sBAAqBC,UAAU,cAA/B,UACI,mBAAGC,KAAK,KAAR,SAAa,6BAAKF,EAAOG,UACzB,cAAC,IAAD,CAAWC,MAAO,IAAlB,SAAwBJ,EAAOK,SAFzBL,EAAOM,UAxCrC,EAAKV,MAAQ,CACTlB,MAAO,GACPU,QAAS,GACTE,WAAW,EACXD,QAAS,IANE,E,qDAqDT,IAAD,EACiCkB,KAAKX,MAAnClB,EADH,EACGA,MAAOY,EADV,EACUA,UAAWD,EADrB,EACqBA,QAE1B,OACI,sBAAKY,UAAU,YAAf,UAEI,qBAAKA,UAAU,mBAAf,SACI,wBAAOA,UAAU,eAAjB,UACI,mBAAGA,UAAU,8BACb,cAAC,gBAAD,CACIO,gBAAiB,IACjBC,UAAW,EACXC,KAAK,OACLhB,MAAOhB,EACPiC,KAAK,QACLL,GAAG,eACHM,YAAY,YACZC,SAAUN,KAAKhB,2BAI3B,sBAAKU,UAAU,oBAAf,UAEI,qBAAKA,UAAS,qCAAgCX,EAAY,OAAS,QAAnE,SACI,8BACI,mBAAGW,UAAU,wBADjB,kBAKJ,qBAAKA,UAAS,qCAAgCZ,EAAU,OAAS,QAAjE,SACI,8BACI,mBAAGY,UAAU,iBACZZ,QAKPC,GAAaiB,KAAKZ,+B,GA3FnBmB,cCMNC,E,uKARX,OACE,8BACE,cAAC,EAAD,U,GAJUD,aCIlBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.35579113.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { DebounceInput } from \"react-debounce-input\";\r\nimport WordLimit from \"react-word-limit\";\r\n\r\nimport \"../css/search.css\";\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: \"\",\r\n            results: {},\r\n            isLoading: false,\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    // fetching search results\r\n    fetchSearchResults = (query) => {\r\n        const jsonUrl = `https://jsonplaceholder.typicode.com/posts?q=${query}`;\r\n\r\n        axios.get(jsonUrl)\r\n            .then(res => {\r\n                const resNotFoundMsg = !res.data.length ? \"Sorry, we couldn't find anything\" : \"\";\r\n                this.setState({\r\n                    results: res.data,\r\n                    message: resNotFoundMsg,\r\n                    isLoading: false\r\n                })\r\n            })\r\n    };\r\n\r\n    // handling input change\r\n    handleOnInputChange = (ev) => {\r\n        const query = ev.target.value;\r\n        this.setState({ query: query, isLoading: true, message: \"\" }, () => {\r\n            this.fetchSearchResults(query);\r\n        });\r\n    };\r\n\r\n    // rendering search results\r\n    renderSearchResult = () => {\r\n        const { results } = this.state;\r\n\r\n        if (Object.keys(results).length && results.length) {\r\n            return (\r\n                <div>\r\n                    {results.map((result) => {\r\n                        return (\r\n                            <div key={result.id} className=\"result-item\">\r\n                                <a href=\"#!\"><h3>{result.title}</h3></a>\r\n                                <WordLimit limit={140}>{result.body}</WordLimit>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { query, isLoading, message } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {/* search bar */}\r\n                <div className=\"search-container\">\r\n                    <label className=\"search-input\">\r\n                        <i className=\"fas fa-search search-icon\" />\r\n                        <DebounceInput\r\n                            debounceTimeout={300}\r\n                            minLength={2}\r\n                            type=\"text\"\r\n                            value={query}\r\n                            name=\"query\"\r\n                            id=\"search-input\"\r\n                            placeholder=\"Search...\"\r\n                            onChange={this.handleOnInputChange}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"results-container\">\r\n                    {/* results status */}\r\n                    <div className={`result-item results-status ${isLoading ? \"show\" : \"hide\"}`}>\r\n                        <p>\r\n                            <i className=\"fas fa-circle-notch\"></i>\r\n                            Loading...\r\n                        </p>\r\n                    </div>\r\n                    <div className={`result-item results-status ${message ? \"show\" : \"hide\"}`}>\r\n                        <p>\r\n                            <i className=\"fas fa-times\"></i>\r\n                            {message}\r\n                        </p>\r\n                    </div>\r\n\r\n                    {/* results */}\r\n                    {!isLoading && this.renderSearchResult()}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\nimport Search from \"./components/Search\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Search />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"../src/css/style.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}